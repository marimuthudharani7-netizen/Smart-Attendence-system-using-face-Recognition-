DISCRIPTION:
A Smart Attendance System uses face recognition to automatically mark student/employee attendance, eliminating manual entry and improving accuracy. It captures faces through a camera, compares them with stored data, and records attendance in real time.
CODING:
import cv2
import face_recognition
import datetime

# Load known image and encode
known_img = face_recognition.load_image_file("student.jpg")
known_enc = face_recognition.face_encodings(known_img)[0]

# Start camera
video = cv2.VideoCapture(0)

while True:
    ret, frame = video.read()
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    faces = face_recognition.face_locations(rgb_frame)
    encodings = face_recognition.face_encodings(rgb_frame, faces)

    for face_encoding, face_loc in zip(encodings, faces):
        match = face_recognition.compare_faces([known_enc], face_encoding)[0]
        if match:
            cv2.putText(frame, "Attendance Marked", (50,50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,255,0), 2)
            with open("attendance.csv", "a") as f:
                f.write(f"Present,{datetime.datetime.now()}\n")

    cv2.imshow("Attendance System", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video.release()
cv2.destroyAllWindows()
